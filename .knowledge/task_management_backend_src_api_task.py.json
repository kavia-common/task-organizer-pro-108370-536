{"is_source_file": true, "format": "Python", "description": "This file defines API endpoints for task management using FastAPI. It sets up various HTTP routes for creating, retrieving, updating, deleting, assigning tasks, and filtering tasks by due date, all as placeholders with pending database logic.", "external_files": ["src.api.models", "src.api.db"], "external_methods": ["get_db_session", "Task as TaskORM", "User as UserORM"], "published": ["create_task", "list_tasks", "get_task", "update_task", "delete_task", "assign_task", "update_status", "get_due_today"], "classes": [], "methods": [{"name": "create_task( task_in: TaskCreate, db: AsyncSession = Depends(get_db_session) )", "description": "Async endpoint to create a new task; currently unimplemented with a placeholder exception.", "scope": "", "scopeKind": ""}, {"name": "list_tasks( status: Optional[str] = Query(None, description=\"Filter by status\"), assignee_id: Optional[int] = Query(None, description=\"Filter by assignee id\"), due_before: Optional[date] = Query(None, description=\"Tasks due before this date\"), db: AsyncSession = Depends(get_db_session) )", "description": "Async endpoint to list tasks with optional status, assignee, and due date filtering; unimplemented placeholder.", "scope": "", "scopeKind": ""}, {"name": "get_task( task_id: int, db: AsyncSession = Depends(get_db_session) )", "description": "Async endpoint to retrieve a task by ID; currently unimplemented placeholder.", "scope": "", "scopeKind": ""}, {"name": "update_task( task_id: int, task_in: TaskUpdate, db: AsyncSession = Depends(get_db_session) )", "description": "Async endpoint to update a task by ID; currently unimplemented placeholder.", "scope": "", "scopeKind": ""}, {"name": "delete_task( task_id: int, db: AsyncSession = Depends(get_db_session) )", "description": "Async endpoint to delete a task by ID; currently unimplemented placeholder.", "scope": "", "scopeKind": ""}, {"name": "assign_task( task_id: int, assignee_id: int, db: AsyncSession = Depends(get_db_session) )", "description": "Async endpoint to assign a task to a user; currently unimplemented placeholder.", "scope": "", "scopeKind": ""}, {"name": "update_status( task_id: int, new_status: str, db: AsyncSession = Depends(get_db_session) )", "description": "Async endpoint to update the status of a task; currently unimplemented placeholder.", "scope": "", "scopeKind": ""}, {"name": "get_due_today( db: AsyncSession = Depends(get_db_session) )", "description": "Async endpoint to retrieve tasks due today; currently unimplemented placeholder.", "scope": "", "scopeKind": ""}], "calls": ["Depends(get_db_session)"], "search-terms": ["FastAPI", "task management", "API router", "AsyncSession", "task CRUD", "task assignment", "task filtering"], "state": 2, "file_id": 7, "knowledge_revision": 22, "git_revision": "270a6dfd17ac7cb04d63bea979cec810b38796b1", "revision_history": [{"15": ""}, {"19": "270a6dfd17ac7cb04d63bea979cec810b38796b1"}, {"22": "270a6dfd17ac7cb04d63bea979cec810b38796b1"}], "ctags": [{"_type": "tag", "name": "TaskORM", "path": "/home/kavia/workspace/code-generation/task-organizer-pro-108370-536/task_management_backend/src/api/task.py", "pattern": "/^from src.api.db import get_db_session, Task as TaskORM, User as UserORM$/", "language": "Python", "kind": "unknown", "nameref": "unknown:Task"}, {"_type": "tag", "name": "UserORM", "path": "/home/kavia/workspace/code-generation/task-organizer-pro-108370-536/task_management_backend/src/api/task.py", "pattern": "/^from src.api.db import get_db_session, Task as TaskORM, User as UserORM$/", "language": "Python", "kind": "unknown", "nameref": "unknown:User"}, {"_type": "tag", "name": "assign_task", "path": "/home/kavia/workspace/code-generation/task-organizer-pro-108370-536/task_management_backend/src/api/task.py", "pattern": "/^async def assign_task($/", "language": "Python", "kind": "function", "signature": "( task_id: int, assignee_id: int, db: AsyncSession = Depends(get_db_session) )"}, {"_type": "tag", "name": "create_task", "path": "/home/kavia/workspace/code-generation/task-organizer-pro-108370-536/task_management_backend/src/api/task.py", "pattern": "/^async def create_task($/", "language": "Python", "kind": "function", "signature": "( task_in: TaskCreate, db: AsyncSession = Depends(get_db_session) )"}, {"_type": "tag", "name": "delete_task", "path": "/home/kavia/workspace/code-generation/task-organizer-pro-108370-536/task_management_backend/src/api/task.py", "pattern": "/^async def delete_task($/", "language": "Python", "kind": "function", "signature": "( task_id: int, db: AsyncSession = Depends(get_db_session) )"}, {"_type": "tag", "name": "get_due_today", "path": "/home/kavia/workspace/code-generation/task-organizer-pro-108370-536/task_management_backend/src/api/task.py", "pattern": "/^async def get_due_today($/", "language": "Python", "kind": "function", "signature": "( db: AsyncSession = Depends(get_db_session) )"}, {"_type": "tag", "name": "get_task", "path": "/home/kavia/workspace/code-generation/task-organizer-pro-108370-536/task_management_backend/src/api/task.py", "pattern": "/^async def get_task($/", "language": "Python", "kind": "function", "signature": "( task_id: int, db: AsyncSession = Depends(get_db_session) )"}, {"_type": "tag", "name": "list_tasks", "path": "/home/kavia/workspace/code-generation/task-organizer-pro-108370-536/task_management_backend/src/api/task.py", "pattern": "/^async def list_tasks($/", "language": "Python", "kind": "function", "signature": "( status: Optional[str] = Query(None, description=\"Filter by status\"), assignee_id: Optional[int] = Query(None, description=\"Filter by assignee id\"), due_before: Optional[date] = Query(None, description=\"Tasks due before this date\"), db: AsyncSession = Depends(get_db_session) )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/task-organizer-pro-108370-536/task_management_backend/src/api/task.py", "pattern": "/^router = APIRouter(prefix=\"\\/tasks\", tags=[\"Tasks\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update_status", "path": "/home/kavia/workspace/code-generation/task-organizer-pro-108370-536/task_management_backend/src/api/task.py", "pattern": "/^async def update_status($/", "language": "Python", "kind": "function", "signature": "( task_id: int, new_status: str, db: AsyncSession = Depends(get_db_session) )"}, {"_type": "tag", "name": "update_task", "path": "/home/kavia/workspace/code-generation/task-organizer-pro-108370-536/task_management_backend/src/api/task.py", "pattern": "/^async def update_task($/", "language": "Python", "kind": "function", "signature": "( task_id: int, task_in: TaskUpdate, db: AsyncSession = Depends(get_db_session) )"}], "hash": "537897ffcd750c3b4889025df1a25f20", "format-version": 4, "code-base-name": "task_management_backend", "filename": "task_management_backend/src/api/task.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/tasks\", tags=[\"Tasks\"])", "scope": "", "scopeKind": "", "description": "unavailable"}]}