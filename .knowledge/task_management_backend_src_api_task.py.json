{"is_source_file": true, "format": "Python", "description": "This file defines a FastAPI router for task management API endpoints, including creating, listing, retrieving, updating, deleting, assigning, and querying tasks. It uses SQLAlchemy for database interactions and includes type annotations and models from the project.", "external_files": ["src/api/models", "src/api/db"], "external_methods": ["get_db_session", "Task", "User"], "published": ["router"], "classes": [{"name": "TaskRead", "description": "Model used to serialize task data for responses"}, {"name": "TaskListResponse", "description": "Response model containing list of tasks and total count"}, {"name": "MessageResponse", "description": "Model for simple message responses"}], "methods": [{"name": "TaskRead task_to_read(task: Task)", "description": "Converts Task ORM object to TaskRead for API response", "scope": "", "scopeKind": ""}, {"name": "create_task( task_in: TaskCreate, db: AsyncSession = Depends(get_db_session), )", "description": "API endpoint to create a new task", "scope": "", "scopeKind": ""}, {"name": "list_tasks( status: Optional[str] = Query(None, description=\"Filter by status\"), assignee_id: Optional[int] = Query(None, description=\"Filter by assignee id\"), due_before: Optional[date] = Query(None, description=\"Tasks due before this date\"), db: AsyncSession = Depends(get_db_session), )", "description": "API endpoint to list tasks with filtering options", "scope": "", "scopeKind": ""}, {"name": "get_task( task_id: int, db: AsyncSession = Depends(get_db_session), )", "description": "API endpoint to retrieve a task by ID", "scope": "", "scopeKind": ""}, {"name": "update_task( task_id: int, task_in: TaskUpdate, db: AsyncSession = Depends(get_db_session), )", "description": "API endpoint to update a task's fields", "scope": "", "scopeKind": ""}, {"name": "delete_task( task_id: int, db: AsyncSession = Depends(get_db_session), )", "description": "API endpoint to delete a task", "scope": "", "scopeKind": ""}, {"name": "assign_task( task_id: int, assignee_id: int, db: AsyncSession = Depends(get_db_session), )", "description": "API endpoint to assign a task to a user", "scope": "", "scopeKind": ""}, {"name": "update_status( task_id: int, new_status: str, db: AsyncSession = Depends(get_db_session), )", "description": "API endpoint to update the status of a task", "scope": "", "scopeKind": ""}, {"name": "get_due_today( db: AsyncSession = Depends(get_db_session), )", "description": "API endpoint to list tasks due today", "scope": "", "scopeKind": ""}], "calls": ["select(Task).where(Task.id == task_id)", "db.execute", "db.commit", "db.refresh", "db.rollback", "db.delete", "select(User).where(User.id == assignee_id)"], "search-terms": ["task management API", "FastAPI task endpoints", "CRUD task routes", "task assignment", "task filtering"], "state": 2, "file_id": 7, "knowledge_revision": 29, "git_revision": "5a67dee7f4ba54150997567da4024f64f2199b9c", "revision_history": [{"15": ""}, {"19": "270a6dfd17ac7cb04d63bea979cec810b38796b1"}, {"22": "270a6dfd17ac7cb04d63bea979cec810b38796b1"}, {"26": "23f42520d5aaa49c092967f454ba09f8e77122bf"}, {"28": "5a67dee7f4ba54150997567da4024f64f2199b9c"}, {"29": "5a67dee7f4ba54150997567da4024f64f2199b9c"}], "ctags": [{"_type": "tag", "name": "assign_task", "path": "/home/kavia/workspace/code-generation/task-organizer-pro-108370-536/task_management_backend/src/api/task.py", "pattern": "/^async def assign_task($/", "language": "Python", "kind": "function", "signature": "( task_id: int, assignee_id: int, db: AsyncSession = Depends(get_db_session), )"}, {"_type": "tag", "name": "create_task", "path": "/home/kavia/workspace/code-generation/task-organizer-pro-108370-536/task_management_backend/src/api/task.py", "pattern": "/^async def create_task($/", "language": "Python", "kind": "function", "signature": "( task_in: TaskCreate, db: AsyncSession = Depends(get_db_session), )"}, {"_type": "tag", "name": "delete_task", "path": "/home/kavia/workspace/code-generation/task-organizer-pro-108370-536/task_management_backend/src/api/task.py", "pattern": "/^async def delete_task($/", "language": "Python", "kind": "function", "signature": "( task_id: int, db: AsyncSession = Depends(get_db_session), )"}, {"_type": "tag", "name": "get_due_today", "path": "/home/kavia/workspace/code-generation/task-organizer-pro-108370-536/task_management_backend/src/api/task.py", "pattern": "/^async def get_due_today($/", "language": "Python", "kind": "function", "signature": "( db: AsyncSession = Depends(get_db_session), )"}, {"_type": "tag", "name": "get_task", "path": "/home/kavia/workspace/code-generation/task-organizer-pro-108370-536/task_management_backend/src/api/task.py", "pattern": "/^async def get_task($/", "language": "Python", "kind": "function", "signature": "( task_id: int, db: AsyncSession = Depends(get_db_session), )"}, {"_type": "tag", "name": "list_tasks", "path": "/home/kavia/workspace/code-generation/task-organizer-pro-108370-536/task_management_backend/src/api/task.py", "pattern": "/^async def list_tasks($/", "language": "Python", "kind": "function", "signature": "( status: Optional[str] = Query(None, description=\"Filter by status\"), assignee_id: Optional[int] = Query(None, description=\"Filter by assignee id\"), due_before: Optional[date] = Query(None, description=\"Tasks due before this date\"), db: AsyncSession = Depends(get_db_session), )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/task-organizer-pro-108370-536/task_management_backend/src/api/task.py", "pattern": "/^router = APIRouter(prefix=\"\\/tasks\", tags=[\"Tasks\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "task_to_read", "path": "/home/kavia/workspace/code-generation/task-organizer-pro-108370-536/task_management_backend/src/api/task.py", "pattern": "/^def task_to_read(task: Task) -> TaskRead:$/", "language": "Python", "typeref": "typename:TaskRead", "kind": "function", "signature": "(task: Task)"}, {"_type": "tag", "name": "update_status", "path": "/home/kavia/workspace/code-generation/task-organizer-pro-108370-536/task_management_backend/src/api/task.py", "pattern": "/^async def update_status($/", "language": "Python", "kind": "function", "signature": "( task_id: int, new_status: str, db: AsyncSession = Depends(get_db_session), )"}, {"_type": "tag", "name": "update_task", "path": "/home/kavia/workspace/code-generation/task-organizer-pro-108370-536/task_management_backend/src/api/task.py", "pattern": "/^async def update_task($/", "language": "Python", "kind": "function", "signature": "( task_id: int, task_in: TaskUpdate, db: AsyncSession = Depends(get_db_session), )"}], "hash": "022ab77428fa15eb365304bcf360c9a0", "format-version": 4, "code-base-name": "task_management_backend", "filename": "task_management_backend/src/api/task.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/tasks\", tags=[\"Tasks\"])", "scope": "", "scopeKind": "", "description": "unavailable"}]}