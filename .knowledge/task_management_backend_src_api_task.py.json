{"is_source_file": true, "format": "Python", "description": "This file implements REST API endpoints for task management using FastAPI. It includes functions for creating, listing, retrieving, updating, deleting, assigning, and changing the status of tasks, with in-memory storage used for demonstration purposes. The file defines a router with a '/tasks' prefix and handles task operations with various query parameters and request payloads.", "external_files": ["src.api.models"], "external_methods": ["APIRouter", "HTTPException", "Query", "status"], "published": ["router"], "classes": [], "methods": [{"name": "create_task(task_in: TaskCreate)", "description": "Creates a new task with provided details and stores it in the in-memory database.", "scope": "", "scopeKind": ""}, {"name": "list_tasks( status: Optional[str] = Query(None, description=\"Filter by status\"), assignee_id: Optional[int] = Query(None, description=\"Filter by assignee id\"), due_before: Optional[date] = Query(None, description=\"Tasks due before this date\") )", "description": "Retrieves a list of tasks, optionally filtered by status, assignee, or due date.", "scope": "", "scopeKind": ""}, {"name": "get_task(task_id: int)", "description": "Fetches a task by its ID.", "scope": "", "scopeKind": ""}, {"name": "update_task(task_id: int, task_in: TaskUpdate)", "description": "Updates fields of an existing task based on given input.", "scope": "", "scopeKind": ""}, {"name": "delete_task(task_id: int)", "description": "Deletes a task identified by its ID.", "scope": "", "scopeKind": ""}, {"name": "assign_task(task_id: int, assignee_id: int)", "description": "Assigns a task to a user by updating the assignee ID.", "scope": "", "scopeKind": ""}, {"name": "update_status(task_id: int, new_status: str)", "description": "Updates the status of a specific task.", "scope": "", "scopeKind": ""}, {"name": "get_due_today()", "description": "Returns tasks due today.", "scope": "", "scopeKind": ""}, {"name": "_create_fake_task_id()", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["datetime.utcnow()", "TaskRead(**data)", "TaskListResponse(tasks=[TaskRead(**task) for task in filtered], total=len(filtered))", "TaskRead(**task)", "datetime.utcnow()", "TaskRead(**task)", "datetime.utcnow()", "TaskRead(**task)", "datetime.utcnow()", "TaskRead(**task)", "datetime.utcnow()", "TaskRead(**task)", "datetime.utcnow()", "TaskRead(**task)"], "search-terms": ["FastAPI task API", "in-memory task storage", "task CRUD endpoints", "task assignment API", "task status update", "/tasks route", "task management backend"], "state": 2, "file_id": 7, "knowledge_revision": 15, "git_revision": "", "ctags": [{"_type": "tag", "name": "_create_fake_task_id", "path": "/home/kavia/workspace/code-generation/task-organizer-pro-108370-536/task_management_backend/src/api/task.py", "pattern": "/^def _create_fake_task_id():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "_fake_task_db", "path": "/home/kavia/workspace/code-generation/task-organizer-pro-108370-536/task_management_backend/src/api/task.py", "pattern": "/^_fake_task_db: Dict[int, Dict] = {}$/", "language": "Python", "typeref": "typename:Dict[int, Dict]", "kind": "variable"}, {"_type": "tag", "name": "_initial_task_id", "path": "/home/kavia/workspace/code-generation/task-organizer-pro-108370-536/task_management_backend/src/api/task.py", "pattern": "/^_initial_task_id = 1$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "assign_task", "path": "/home/kavia/workspace/code-generation/task-organizer-pro-108370-536/task_management_backend/src/api/task.py", "pattern": "/^def assign_task(task_id: int, assignee_id: int):$/", "language": "Python", "kind": "function", "signature": "(task_id: int, assignee_id: int)"}, {"_type": "tag", "name": "create_task", "path": "/home/kavia/workspace/code-generation/task-organizer-pro-108370-536/task_management_backend/src/api/task.py", "pattern": "/^def create_task(task_in: TaskCreate):$/", "language": "Python", "kind": "function", "signature": "(task_in: TaskCreate)"}, {"_type": "tag", "name": "delete_task", "path": "/home/kavia/workspace/code-generation/task-organizer-pro-108370-536/task_management_backend/src/api/task.py", "pattern": "/^def delete_task(task_id: int):$/", "language": "Python", "kind": "function", "signature": "(task_id: int)"}, {"_type": "tag", "name": "get_due_today", "path": "/home/kavia/workspace/code-generation/task-organizer-pro-108370-536/task_management_backend/src/api/task.py", "pattern": "/^def get_due_today():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_task", "path": "/home/kavia/workspace/code-generation/task-organizer-pro-108370-536/task_management_backend/src/api/task.py", "pattern": "/^def get_task(task_id: int):$/", "language": "Python", "kind": "function", "signature": "(task_id: int)"}, {"_type": "tag", "name": "list_tasks", "path": "/home/kavia/workspace/code-generation/task-organizer-pro-108370-536/task_management_backend/src/api/task.py", "pattern": "/^def list_tasks($/", "language": "Python", "kind": "function", "signature": "( status: Optional[str] = Query(None, description=\"Filter by status\"), assignee_id: Optional[int] = Query(None, description=\"Filter by assignee id\"), due_before: Optional[date] = Query(None, description=\"Tasks due before this date\") )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/task-organizer-pro-108370-536/task_management_backend/src/api/task.py", "pattern": "/^router = APIRouter(prefix=\"\\/tasks\", tags=[\"Tasks\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update_status", "path": "/home/kavia/workspace/code-generation/task-organizer-pro-108370-536/task_management_backend/src/api/task.py", "pattern": "/^def update_status(task_id: int, new_status: str):$/", "language": "Python", "kind": "function", "signature": "(task_id: int, new_status: str)"}, {"_type": "tag", "name": "update_task", "path": "/home/kavia/workspace/code-generation/task-organizer-pro-108370-536/task_management_backend/src/api/task.py", "pattern": "/^def update_task(task_id: int, task_in: TaskUpdate):$/", "language": "Python", "kind": "function", "signature": "(task_id: int, task_in: TaskUpdate)"}], "hash": "0cb7fafe4a49bd2aa6e71743e39b4f66", "format-version": 4, "code-base-name": "task_management_backend", "filename": "task_management_backend/src/api/task.py", "fields": [{"name": "Dict[int, Dict] _fake_task_db", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "_initial_task_id = 1", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "router = APIRouter(prefix=\"\\/tasks\", tags=[\"Tasks\"])", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"15": ""}]}